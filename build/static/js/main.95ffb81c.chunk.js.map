{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/BackDrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.95ffb81c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n     isLoggedIn: false, \r\n     userId: null,\r\n     token: null,\r\n     login: () => {}, \r\n     logout: () => {} \r\n    });","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n                userId: uid,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    },\r\n        [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (\r\n            storedData &&\r\n            storedData.token &&\r\n            new Date(storedData.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n\r\n};","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>\r\n}\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return <ul className=\"nav-links\">\r\n        <li>\r\n            <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n        <li>\r\n            <Button onClick={auth.logout}>LOGOUT</Button>\r\n        </li>\r\n        )}\r\n    </ul>\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\nconst content = <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit><aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside></CSSTransition>;\r\n\r\nreturn ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/BackDrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n                <NavLinks />\r\n            </nav>\r\n        </SideDrawer>\r\n    <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n            <span />\r\n            <span />\r\n            <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\"><Link to=\"/\">Your Places</Link></h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n            < NavLinks />\r\n        </nav>\r\n    </MainHeader>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  \n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\">\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n  else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\">\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n          fallback={<div className=\"center\">\n            <LoadingSpinner />\n          </div>} \n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}